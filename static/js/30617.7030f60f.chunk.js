"use strict";(self.webpackChunks03c_station=self.webpackChunks03c_station||[]).push([[30617],{30617:(a,e,t)=>{t.r(e),t.d(e,{default:()=>p});var r=t(89379),s=t(53986),i=t(50076),n=t(53430),l=t(4414),u=t(28383),d=t(42633),m=t(11563);const o=["layer"],c=["layerAdapter"],y=n.numericTypes;async function p(a){const e=await async function(a){if(null===a||void 0===a||!a.layer||!a.view)throw new i.default("heatmap-statistics:missing-parameters","'layer' and 'view' parameters are required");const e=[m.mb.CSVLayer,m.mb.FeatureLayer,m.mb.GeoJSONLayer,m.mb.KnowledgeGraphSublayer,m.mb.OGCFeatureLayer,m.mb.OrientedImageryLayer,m.mb.ParquetLayer,m.mb.StreamLayer,m.mb.WFSLayer],{layer:t}=a,n=(0,s.A)(a,o),c=(0,m.Jg)(t,e);if(!c)throw new i.default("heatmap-statistics:invalid-parameters","'layer' must be one of these types: "+(0,m.Ho)(e).join(", "));const p=(0,r.A)({layerAdapter:c},n);p.radius=null==p.radius?null==p.blurRadius?18:(0,l.zp)(p.blurRadius):p.radius;const b=null!=p.signal?{signal:p.signal}:null;await c.load(b);const f=p.field,h=f?c.getField(f):null,w=await(0,d.EG)({field:f}),g=(0,u.MH)(c,w,"heatmap-statistics:invalid-parameters");if(g)throw g;if(h){const a=(0,u.a)(c,h,"heatmap-statistics:invalid-parameters",y);if(a)throw a}return p}(a),{layerAdapter:t}=e,n=(0,s.A)(e,c);return t.heatmapStatistics(n)}}}]);
//# sourceMappingURL=30617.7030f60f.chunk.js.map